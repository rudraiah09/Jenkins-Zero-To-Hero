pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "rudraiah72/ultimate-cicd:${BUILD_NUMBER}"
        SONAR_URL = "http://13.201.54.213:9000"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/rudraiah09/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Build and Test') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh '''
                            mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
                                -Dsonar.projectKey=my-project \
                                -Dsonar.host.url=${SONAR_URL} \
                                -Dsonar.login=$SONAR_AUTH_TOKEN
                        '''
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        def customImage = docker.build(DOCKER_IMAGE, 'java-maven-sonar-argocd-helm-k8s/spring-boot-app')
                        customImage.push()
                        customImage.push('latest')
                    }
                }
            }
        }
    }
}


